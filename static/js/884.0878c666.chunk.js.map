{"version":3,"file":"static/js/884.0878c666.chunk.js","mappings":"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","sources":["components/ResultItem/ResultItem.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Label = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  background-color: #00000044;\n`;\n\nexport const MovieCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  max-width: 100%;\n  transition-duration: 300ms;\n  border-radius: 10px;\n\n  img {\n    display: block;\n    width: 100%;\n    height: auto;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    display: block;\n    object-fit: cover;\n  }\n\n  &:hover {\n    cursor: pointer;\n    scale: 1.05;\n    color: white;\n    opacity: 1;\n\n    ${Label} {\n      background-color: #cc0000ff;\n    }\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  color: inherit;\n`;\n\nexport const BackDrop = styled.img`\n  display: block;\n  width: 100%;\n`;\n\nexport const MovieInfo = styled.div`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  color: inherit;\n  background-color: #111111bb;\n  padding: 30px;\n  color: white;\n  padding-top: 0px;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding: 30px 15px;\n  background-color: #000000bb;\n  margin: 0;\n  font-size: 50px;\n  letter-spacing: 3px;\n  font-weight: 700;\n  color: yellow;\n  text-shadow: 0px 0px 50px yellow;\n`;\n\nexport const Table = styled.table`\n  margin: auto;\n  text-align: left;\n  border-spacing: 0px;\n  /* table-layout: fixed; */\n  width: 100%;\n  overflow: hidden;\n\n  th,\n  td {\n    padding: 25px 30px;\n  }\n\n  th {\n    background-color: #cf0000ee;\n    font-weight: 700;\n    font-size: 20px;\n  }\n\n  tr:nth-child(odd) {\n    background-color: #00000077;\n    th {\n      background-color: #dd0000;\n    }\n  }\n\n  td {\n    background-color: #11111199;\n    font-weight: 500;\n    font-size: 18px;\n  }\n`;\n\nexport const TableLink = styled.a`\n  color: yellow;\n  text-decoration: none;\n`;\n\nexport const ExtraLink = styled(NavLink)`\n  display: inline-flex;\n  width: 25%;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  transition-duration: 200ms;\n  font-size: 21px;\n  margin: 20px;\n  box-shadow: 0px 0px 2px white;\n\n  &.active {\n    color: white;\n    background-color: #000000bb;\n    box-shadow: 0px 0px 2px #000000bb;\n  }\n\n  &.active,\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:hover:not(.active) {\n    color: black;\n    background-color: white;\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: inline-flex;\n  width: 25%;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  transition-duration: 200ms;\n  font-size: 21px;\n  margin: 20px;\n  box-shadow: 0px 0px 2px white;\n\n  &:hover {\n    color: black;\n    background-color: yellow;\n    cursor: pointer;\n  }\n`;\n\nexport const ActorCard = styled.li`\n  img {\n    object-fit: cover;\n    display: block;\n    flex-grow: 1;\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n  }\n\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  max-width: 100%;\n  transition-duration: 300ms;\n  box-shadow: 0px 0px 2px white;\n`;\n\nexport const Actor = styled.span`\n  color: yellow;\n  font-size: 22px;\n`;\n\nexport const Character = styled.span`\n  color: red;\n  font-size: 22px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  max-width: 100%;\n  transition-duration: 300ms;\n  border-radius: 10px;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  color: yellow;\n  margin-bottom: 5px;\n  margin-top: 10px;\n`;\n\nexport const ReviewContent = styled.p`\n  margin-top: 5px;\n  font-size: 18px;\n  text-align: justify;\n  margin-bottom: 10px;\n`;\n\nexport const NoReviews = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const CastContent = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n  margin: 10px 5px;\n\n  &:last-child {\n    margin-top: 0px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  font-size: 15px;\n  font-weight: 500;\n  text-align: center;\n  background-color: green;\n  color: white;\n  margin-left: 10px;\n  border: none;\n  /* box-shadow: 0px 0px 5px 0px yellow; */\n  transition-duration: 100ms;\n  padding: 9px;\n  border-radius: 5px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: red;\n    scale: 1.1;\n  }\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 25px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n\n  /* box-shadow: 0px 0px 5px 0px yellow; */\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getMovieInfo } from 'services/API';\nimport {\n  BackDrop,\n  Table,\n  MovieInfo,\n  MovieTitle,\n  TableLink,\n  BackLink,\n} from 'components/ResultItem/ResultItem.styled';\n\nimport { ExtraLink } from 'components/ResultItem/ResultItem.styled';\n\nimport { Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieInfo(movieId).then(movie => {\n      if (movie !== undefined) {\n        setMovie(movie);\n      }\n\n      return;\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { title, backdrop_path } = movie;\n  const image =\n    (backdrop_path && 'https://image.tmdb.org/t/p/original/' + backdrop_path) ||\n    `https://www.kindpng.com/picc/m/18-189751_movie-placeholder-hd-png-download.png`;\n  return (\n    <>\n      {(Object.keys(movie).length > 0 && (\n        <MovieInfo>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <BackDrop src={image} alt={title} />\n          <div>\n            <MovieTitle>{title.toUpperCase()}</MovieTitle>\n            <ExtraLink to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </ExtraLink>\n            <ExtraLink to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </ExtraLink>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n            <Table>\n              <tbody>\n                {Object.keys(movie).map(key => {\n                  if (\n                    (movie[key] !== null) &\n                    (movie[key] !== 0) &\n                    (movie[key] !== false) &\n                    (movie[key] !== '') &\n                    (key !== `backdrop_path`) &\n                    (key !== `id`) &\n                    (key !== `poster_path`)\n                  ) {\n                    if (Array.isArray(movie[key])) {\n                      return (\n                        <tr key={key}>\n                          <th>\n                            {key.charAt(0).toUpperCase() +\n                              key.slice(1).replaceAll('_', ' ')}\n                          </th>\n                          <td>\n                            {movie[key]\n                              .map(el =>\n                                Object.keys(el).filter(\n                                  el =>\n                                    (el !== 'id') &\n                                    !el.includes('_path') &\n                                    !el.includes('iso_')\n                                )\n                              )\n                              .map((el, index) =>\n                                el\n                                  .map(el => movie[key][index][el])\n                                  .filter(\n                                    (el, index, array) =>\n                                      index === array.indexOf(el)\n                                  )\n                                  .join(', ')\n                              )\n\n                              .join(', ')}\n                          </td>\n                        </tr>\n                      );\n                    }\n                    if (typeof movie[key] === 'object') {\n                      return (\n                        <tr key={key}>\n                          <th>\n                            {key.charAt(0).toUpperCase() +\n                              key.slice(1).replaceAll('_', ' ')}\n                          </th>\n                          <td>\n                            {Object.keys(movie[key])\n                              .filter(\n                                el =>\n                                  !el.includes('_path') &\n                                  (el !== 'id') &\n                                  !el.includes('iso_')\n                              )\n                              .map(el => movie[key][el])\n                              .toString()}\n                          </td>\n                        </tr>\n                      );\n                    }\n\n                    return (\n                      <tr key={key}>\n                        <th>\n                          {key.charAt(0).toUpperCase() +\n                            key.slice(1).replaceAll('_', ' ')}\n                        </th>\n                        <td>\n                          {(movie[key].toString().includes('https') && (\n                            <TableLink href={movie[key].toString()}>\n                              {movie[key].toString()}\n                            </TableLink>\n                          )) ||\n                            movie[key].toString()}\n                        </td>\n                      </tr>\n                    );\n                  }\n                  return false;\n                })}\n              </tbody>\n            </Table>\n          </div>\n        </MovieInfo>\n      )) || <p>Unvalid Movie ID</p>}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Label","styled","MovieCard","Title","Link","NavLink","BackDrop","MovieInfo","MovieTitle","Table","TableLink","ExtraLink","BackLink","ActorCard","Actor","Character","ReviewItem","ReviewAuthor","ReviewContent","NoReviews","CastContent","SearchButton","SearchForm","SearchInput","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","getMovieInfo","then","undefined","title","backdrop_path","image","Object","keys","length","to","src","alt","toUpperCase","Suspense","fallback","map","key","Array","isArray","charAt","slice","replaceAll","el","filter","includes","index","array","indexOf","join","toString","href"],"sourceRoot":""}