{"version":3,"file":"static/js/37.70453e53.chunk.js","mappings":"sOAIe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAaI,IAAI,SACjCD,IACFE,EAAAA,EAAAA,IAAYF,GAAaG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAASS,SAgB5D,OACE,iCACE,kBACEC,MAAO,CAAEC,OAAQ,IACjBC,UAAU,cACVC,SAlBe,SAAAC,GACnBA,EAAEC,iBACF,IAAMV,EAAcR,EAAMmB,OAAOC,oBACb,KAAhBZ,GAIJF,EAAgB,CAAEN,MAAOQ,KACzBE,EAAAA,EAAAA,IAAYF,GAAaG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAASS,OAJtDS,MAAM,UAWN,WAKE,kBACEC,KAAK,OACLC,KAAK,OACLC,KAAK,KACLC,aAAa,MACbC,SAfa,SAAAT,GACnBhB,EAASgB,EAAEU,cAAcC,WAgBrB,mBAAQf,MAAO,CAAEC,OAAQ,GAAIe,OAAQ,WAAaP,KAAK,SAAvD,uBAIDpB,IACC,wBACGA,EAAM4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAb,SAAoBC,KADbD,a,0MC/CrBG,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACGC,EAAS,CACbC,QAASH,GAFR,kBAKwBD,GAAAA,CAAM,qBAAsB,CAACG,OAAAA,IALrD,cAKOE,EALP,yBAMQA,EAASC,MANjB,gCAQCC,QAAQC,MAAR,MARD,gFAYE,SAAehC,IAAtB,4CAAO,OAAP,oBAAO,2GAA4BF,EAA5B,+BAA0C,GACzC6B,EAAS,CACbC,QAASH,EACTnC,MAAOQ,GAHJ,kBAMsB0B,GAAAA,CAAM,eAAgB,CAACG,OAAAA,IAN7C,cAMKE,EANL,yBAOMA,EAASC,MAPf,gCASDC,QAAQC,MAAR,MATC,iFAaA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAA0BZ,EAA1B,+BAA+B,GAC9BM,EAAS,CACbC,QAASH,GAFN,kBAKsBD,GAAAA,CAAM,SAAD,OAAUH,GAAM,CAACM,OAAAA,IAL5C,cAKKE,EALL,yBAMMA,EAASC,MANf,gCAQDC,QAAQC,MAAR,MARC,iFAYA,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,2GAA6Bb,EAA7B,+BAAkC,GACjCM,EAAS,CACbC,QAASH,GAFN,kBAKsBD,GAAAA,CAAM,SAAD,OAAUH,EAAV,YAAwB,CAACM,OAAAA,IALpD,cAKKE,EALL,yBAMMA,EAASC,MANf,gCAQDC,QAAQC,MAAR,MARC,iFAYA,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,2GAA6Bd,EAA7B,+BAAkC,GACjCM,EAAS,CACbC,QAASH,GAFN,kBAKsBD,GAAAA,CAAM,SAAD,OAAUH,EAAV,YAAwB,CAACM,OAAAA,IALpD,cAKKE,EALL,yBAMMA,EAASC,MANf,gCAQDC,QAAQC,MAAR,MARC","sources":["components/MoviesPage/MoviesPage.js","services/films-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { searchMovie } from '../../services/films-api';\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (searchQuery) {\n      searchMovie(searchQuery).then(({ results }) => setFilms(results));\n    }\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = query.trim().toLocaleLowerCase();\n    if (searchQuery === '') {\n      alert('Empty');\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n    searchMovie(searchQuery).then(({ results }) => setFilms(results));\n  };\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n  return (\n    <>\n      <form\n        style={{ margin: 20 }}\n        className=\"search-form\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"find\"\n          size=\"20\"\n          autoComplete=\"off\"\n          onChange={handleChange}\n        ></input>\n        <button style={{ margin: 10, cursor: 'pointer' }} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {films && (\n        <ul>\n          {films.map(({ id, original_title }) => (\n            <li key={id}>\n              <Link to={`${id}`}>{original_title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nconst KEY = '067f291d21ed1c6d30bd9ade17d843cc';\n\nexport async function trendMovies() {\n    const params = {\n      api_key: KEY,         \n    };\n    try{\n        const response = await axios('trending/movie/day', {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function searchMovie( searchQuery = '') {\n    const params = {\n      api_key: KEY,\n      query: searchQuery          \n    };\n    try{\n        const response = await axios('search/movie', {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n  \n  export async function movieById( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function movieCredits( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}/credits`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n\n  export async function movieReviews( id = '') {\n    const params = {\n      api_key: KEY,               \n    };\n    try{\n        const response = await axios(`movie/${id}/reviews`, {params});\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }    \n  };\n  \n  \n"],"names":["MoviesPage","useState","query","setQuery","films","setFilms","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","searchMovie","then","results","style","margin","className","onSubmit","e","preventDefault","trim","toLocaleLowerCase","alert","type","name","size","autoComplete","onChange","currentTarget","value","cursor","map","id","original_title","to","axios","KEY","trendMovies","params","api_key","response","data","console","error","movieById","movieCredits","movieReviews"],"sourceRoot":""}