{"version":3,"file":"static/js/319.85b360ab.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.js","services/films-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back\":\"MovieDetailsPage_back__B440W\",\"filmCont\":\"MovieDetailsPage_filmCont__h6TJ7\",\"thumb\":\"MovieDetailsPage_thumb__kEHtl\",\"picture\":\"MovieDetailsPage_picture__N1MEC\",\"additional\":\"MovieDetailsPage_additional__BCHVj\"};","import { lazy, Suspense } from 'react';\nimport { useQuery } from 'react-query';\nimport { movieById } from '../../services/films-api';\nimport { useParams, useNavigate, Link, Routes, Route } from 'react-router-dom';\nimport styles from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() => import('../Cast'));\nconst Reviews = lazy(() => import('../Reviews'));\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  function handleClick() {\n    navigate(-1);\n  }\n\n  const query = useQuery(['movies', movieId], () => movieById(movieId));\n\n  if (query.status === 'success') {\n    const movie = query.data;\n    const {\n      poster_path,\n      genres,\n      original_title,\n      overview,\n      release_date,\n      vote_average,\n    } = movie;\n    const picturePath = `https://image.tmdb.org/t/p/w500${poster_path}`;\n    return (\n      <>\n        <button className={styles.back} onClick={handleClick}>\n          Go back\n        </button>\n\n        <div className={styles.filmCont}>\n          <div className={styles.thumb}>\n            <img\n              className={styles.picture}\n              src={picturePath}\n              alt={original_title}\n            />\n          </div>\n          <div>\n            <h1>\n              {original_title} ({release_date.split('-')[0]})\n            </h1>\n            <p>User Score: {vote_average * 10}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>\n              {genres.map(({ name }) => (\n                <span key={name}>{name} </span>\n              ))}\n            </p>\n          </div>\n        </div>\n        <div className={styles.additional}>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<h1>Loading</h1>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast id={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews id={movieId} />} />\n          </Routes>\n        </Suspense>\n      </>\n    );\n  }\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '067f291d21ed1c6d30bd9ade17d843cc';\n\nexport async function trendMovies() {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios('trending/movie/day', { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function searchMovie(searchQuery = '') {\n  if (!searchQuery) {\n    return;\n  }\n  const params = {\n    api_key: KEY,\n    query: searchQuery,\n  };\n  try {\n    const response = await axios('search/movie', { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function movieById(id = '') {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios(`movie/${id}`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function movieCredits(id = '') {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios(`movie/${id}/credits`, { params });\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function movieReviews(id = '') {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios(`movie/${id}/reviews`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","navigate","useNavigate","query","useQuery","movieById","status","movie","data","poster_path","genres","original_title","overview","release_date","vote_average","picturePath","className","styles","onClick","src","alt","split","map","name","to","Suspense","fallback","path","element","id","axios","KEY","trendMovies","params","api_key","response","console","error","searchMovie","searchQuery","movieCredits","movieReviews"],"sourceRoot":""}