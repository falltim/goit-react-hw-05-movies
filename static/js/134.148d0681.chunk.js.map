{"version":3,"file":"static/js/134.148d0681.chunk.js","mappings":"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","sources":["components/ResultItem/ResultItem.styled.js","components/ResultItem/ResultItem.jsx","components/ResultList/ResultList.jsx","components/ResultList/ResultList.styled.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Label = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  background-color: #00000044;\n`;\n\nexport const MovieCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  max-width: 100%;\n  transition-duration: 300ms;\n  border-radius: 10px;\n\n  img {\n    display: block;\n    width: 100%;\n    height: auto;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    display: block;\n    object-fit: cover;\n  }\n\n  &:hover {\n    cursor: pointer;\n    scale: 1.05;\n    color: white;\n    opacity: 1;\n\n    ${Label} {\n      background-color: #cc0000ff;\n    }\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 0px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  color: inherit;\n`;\n\nexport const BackDrop = styled.img`\n  display: block;\n  width: 100%;\n`;\n\nexport const MovieInfo = styled.div`\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  color: inherit;\n  background-color: #111111bb;\n  padding: 30px;\n  color: white;\n  padding-top: 0px;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding: 30px 15px;\n  background-color: #000000bb;\n  margin: 0;\n  font-size: 50px;\n  letter-spacing: 3px;\n  font-weight: 700;\n  color: yellow;\n  text-shadow: 0px 0px 50px yellow;\n`;\n\nexport const Table = styled.table`\n  margin: auto;\n  text-align: left;\n  border-spacing: 0px;\n  /* table-layout: fixed; */\n  width: 100%;\n  overflow: hidden;\n\n  th,\n  td {\n    padding: 25px 30px;\n  }\n\n  th {\n    background-color: #cf0000ee;\n    font-weight: 700;\n    font-size: 20px;\n  }\n\n  tr:nth-child(odd) {\n    background-color: #00000077;\n    th {\n      background-color: #dd0000;\n    }\n  }\n\n  td {\n    background-color: #11111199;\n    font-weight: 500;\n    font-size: 18px;\n  }\n`;\n\nexport const TableLink = styled.a`\n  color: yellow;\n  text-decoration: none;\n`;\n\nexport const ExtraLink = styled(NavLink)`\n  display: inline-flex;\n  width: 25%;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  transition-duration: 200ms;\n  font-size: 21px;\n  margin: 20px;\n  box-shadow: 0px 0px 2px white;\n\n  &.active {\n    color: white;\n    background-color: #000000bb;\n    box-shadow: 0px 0px 2px #000000bb;\n  }\n\n  &.active,\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:hover:not(.active) {\n    color: black;\n    background-color: white;\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: inline-flex;\n  width: 25%;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  transition-duration: 200ms;\n  font-size: 21px;\n  margin: 20px;\n  box-shadow: 0px 0px 2px white;\n\n  &:hover {\n    color: black;\n    background-color: yellow;\n    cursor: pointer;\n  }\n`;\n\nexport const ActorCard = styled.li`\n  img {\n    object-fit: cover;\n    display: block;\n    flex-grow: 1;\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n  }\n\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  max-width: 100%;\n  transition-duration: 300ms;\n  box-shadow: 0px 0px 2px white;\n`;\n\nexport const Actor = styled.span`\n  color: yellow;\n  font-size: 22px;\n`;\n\nexport const Character = styled.span`\n  color: red;\n  font-size: 22px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  max-width: 100%;\n  transition-duration: 300ms;\n  border-radius: 10px;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  color: yellow;\n  margin-bottom: 5px;\n  margin-top: 10px;\n`;\n\nexport const ReviewContent = styled.p`\n  margin-top: 5px;\n  font-size: 18px;\n  text-align: justify;\n  margin-bottom: 10px;\n`;\n\nexport const NoReviews = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const CastContent = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n  margin: 10px 5px;\n\n  &:last-child {\n    margin-top: 0px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  font-size: 15px;\n  font-weight: 500;\n  text-align: center;\n  background-color: green;\n  color: white;\n  margin-left: 10px;\n  border: none;\n  /* box-shadow: 0px 0px 5px 0px yellow; */\n  transition-duration: 100ms;\n  padding: 9px;\n  border-radius: 5px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: red;\n    scale: 1.1;\n  }\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 25px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n\n  /* box-shadow: 0px 0px 5px 0px yellow; */\n`;\n","import { MovieCard } from './ResultItem.styled';\nimport { Title, Label, Link } from './ResultItem.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const ResultsItem = ({ result, search }) => {\n  const location = useLocation();\n\n  const { title, name, poster_path } = result;\n  const image =\n    (poster_path && 'https://image.tmdb.org/t/p/w500' + poster_path) ||\n    `https://critics.io/img/movies/poster-placeholder.png`;\n  const path = (search === true && `${result.id}`) || `movies/${result.id}`;\n  return (\n    <MovieCard>\n      <Link to={path} state={{ from: location }}>\n        <img src={image} alt={title || name} />\n        <Label>\n          <Title>{title || name}</Title>\n        </Label>\n      </Link>\n    </MovieCard>\n  );\n};\n","import { ResultsItem } from 'components/ResultItem/ResultItem';\nimport { List } from './ResultList.styled';\n\nexport const ResultsList = ({ results, search }) => {\n  return (\n    <List>\n      {results.map(result => (\n        <ResultsItem result={result} key={result.id} search={search} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  max-width: 100%;\n  margin: 0px auto;\n  padding: 20px 30px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 10px;\n  list-style: none;\n  background-color: #111111bb;\n  color: #ffffffbb;\n\n  &:hover {\n    & > *:not(:hover) {\n      opacity: 0.1;\n    }\n  }\n`;\n\nexport const CastList = styled.ul`\n  max-width: 100%;\n  margin: 0px auto;\n  padding: 20px 30px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 10px;\n  list-style: none;\n  background-color: #111111bb;\n  color: #ffffffbb;\n\n  &:hover {\n    & > *:not(:hover) {\n      opacity: 0.1;\n    }\n  }\n`;\n\nexport const ReviewList = styled.ul`\n  max-width: 100%;\n  margin: 0px auto;\n  padding: 20px 60px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(100%, 1fr));\n  gap: 10px;\n  list-style: none;\n  background-color: #111111bb;\n  color: #ffffffbb;\n\n  &:hover {\n    & > *:not(:hover) {\n      opacity: 0.1;\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n  padding: 20px;\n  background-color: #ff0000cc;\n  color: white;\n  font-size: 30px;\n  letter-spacing: 5px;\n  font-weight: 700;\n  text-shadow: 0px 0px 20px #ff0000cc;\n`;\n","import { Outlet, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport {\n  SearchButton,\n  SearchForm,\n  SearchInput,\n} from 'components/ResultItem/ResultItem.styled';\nimport { findMovies } from 'services/API';\nimport { ResultsList } from '../components/ResultList/ResultList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    if (query !== '') {\n      findMovies(query).then(response => {\n        const results = response.map(movie => movie);\n        setResults(results);\n      });\n      return;\n    }\n    return;\n  }, [query]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <SearchForm\n        onSubmit={async e => {\n          e.preventDefault();\n          updateQueryString(e.target[0].value.trim().toLowerCase());\n        }}\n      >\n        <SearchInput></SearchInput>\n        <SearchButton>Search</SearchButton>\n      </SearchForm>\n      {(results.length > 0 && ['No results'] && (\n        <ResultsList results={results} search={true} />\n      )) ||\n        (query !== '' && results.length < 1 && 'No results') ||\n        'Please type something'}\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Label","styled","MovieCard","Title","Link","NavLink","BackDrop","MovieInfo","MovieTitle","Table","TableLink","ExtraLink","BackLink","ActorCard","Actor","Character","ReviewItem","ReviewAuthor","ReviewContent","NoReviews","CastContent","SearchButton","SearchForm","SearchInput","ResultsItem","result","search","location","useLocation","title","name","poster_path","image","path","id","to","state","from","src","alt","ResultsList","results","map","List","CastList","ReviewList","useSearchParams","searchParams","setSearchParams","query","get","useState","setResults","useEffect","findMovies","then","response","movie","updateQueryString","onSubmit","e","preventDefault","target","value","trim","toLowerCase","length","Suspense","fallback"],"sourceRoot":""}